
<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:20:01 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140548577467848">
              
                <ol start="134" class="pre-context" id="pre140548577467848">
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140548577467848">
                  
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140548577467848', 'post140548577467848')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467848')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467848">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140548577467656">
              
                <ol start="76" class="pre-context" id="pre140548577467656">
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140548577467656">
                  
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140548577467656', 'post140548577467656')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467656')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467656">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140548577467784">
              
                <ol start="66" class="pre-context" id="pre140548577467784">
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140548577467784">
                  
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140548577467784', 'post140548577467784')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467784')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140548577363976">
              
                <ol start="594" class="pre-context" id="pre140548577363976">
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140548577363976">
                  
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140548577363976', 'post140548577363976')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577363976')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577363976">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd404100128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd404100b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044a0240&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140548577467464">
              
                <ol start="350" class="pre-context" id="pre140548577467464">
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140548577467464">
                  
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140548577467464', 'post140548577467464')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467464')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd404100128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044a0240&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044a0518&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140548577465800">
              
                <ol start="1232" class="pre-context" id="pre140548577465800">
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140548577465800">
                  
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140548577465800', 'post140548577465800')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577465800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577465800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140548577467592">
              
                <ol start="1278" class="pre-context" id="pre140548577467592">
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140548577467592">
                  
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140548577467592', 'post140548577467592')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467592')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467592">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140548577464712">
              
                <ol start="1227" class="pre-context" id="pre140548577464712">
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140548577464712">
                  
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140548577464712', 'post140548577464712')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577464712')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577464712">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140548577465992">
              
                <ol start="1019" class="pre-context" id="pre140548577465992">
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140548577465992">
                  
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140548577465992', 'post140548577465992')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577465992')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577465992">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140548577467976">
              
                <ol start="957" class="pre-context" id="pre140548577467976">
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140548577467976">
                  
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140548577467976', 'post140548577467976')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467976')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467976">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140548577468296">
              
                <ol start="159" class="pre-context" id="pre140548577468296">
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140548577468296">
                  
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140548577468296', 'post140548577468296')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577468296')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577468296">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140548577467912">
              
                <ol start="143" class="pre-context" id="pre140548577467912">
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140548577467912">
                  
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140548577467912', 'post140548577467912')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577467912')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577467912">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fd4044a04e0>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140548577364104">
              
                <ol start="433" class="pre-context" id="pre140548577364104">
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140548577364104">
                  
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140548577364104', 'post140548577364104')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577364104')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577364104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd404100128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd404100668&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd404100b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140548577365512">
              
                <ol start="632" class="pre-context" id="pre140548577365512">
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140548577365512">
                  
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577365512', 'post140548577365512')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577365512')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577365512">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd404100128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd404100b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044a0240&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140548577363848">
              
                <ol start="381" class="pre-context" id="pre140548577363848">
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140548577363848">
                  
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577363848', 'post140548577363848')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577363848')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577363848">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd404100128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fd404070808&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fd4044a04e0>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140548577471432">
              
                <ol start="34" class="pre-context" id="pre140548577471432">
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140548577471432">
                  
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577471432', 'post140548577471432')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577471432')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577471432">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140548577468552">
              
                <ol start="180" class="pre-context" id="pre140548577468552">
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140548577468552">
                  
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140548577468552', 'post140548577468552')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577468552')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577468552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d29d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fd404997e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d29d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140548579097032">
              
                <ol start="178" class="pre-context" id="pre140548579097032">
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140548579097032">
                  
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140548579097032', 'post140548579097032')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548579097032')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548579097032">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d29d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fd404997e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d29d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140548579095624">
              
                <ol start="441" class="pre-context" id="pre140548579095624">
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140548579095624">
                  
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140548579095624', 'post140548579095624')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548579095624')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548579095624">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140548578114248">
              
                <ol start="520" class="pre-context" id="pre140548578114248">
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140548578114248">
                  
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140548578114248', 'post140548578114248')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578114248')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578114248">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140548578113800">
              
                <ol start="105" class="pre-context" id="pre140548578113800">
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140548578113800">
                  
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578113800', 'post140548578113800')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578113800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578113800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140548577471368">
              
                <ol start="51" class="pre-context" id="pre140548577471368">
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140548577471368">
                  
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577471368', 'post140548577471368')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577471368')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577471368">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd4040c44a8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140548577469384">
              
                <ol start="501" class="pre-context" id="pre140548577469384">
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140548577469384">
                  
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140548577469384', 'post140548577469384')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577469384')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577469384">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd4040c44a8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140548577364680">
              
                <ol start="611" class="pre-context" id="pre140548577364680">
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140548577364680">
                  
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577364680', 'post140548577364680')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577364680')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577364680">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd404100668&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd4040c44a8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515205201.2986999</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140548577365704">
              
                <ol start="501" class="pre-context" id="pre140548577365704">
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140548577365704">
                  
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577365704', 'post140548577365704')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577365704')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577365704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd404100128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd404100668&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd404100b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044a04e0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;32798&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fd404640a20&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:25:02 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140548577496072">
              
                <ol start="134" class="pre-context" id="pre140548577496072">
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140548577496072">
                  
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140548577496072', 'post140548577496072')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577496072')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577496072">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140548577493448">
              
                <ol start="76" class="pre-context" id="pre140548577493448">
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140548577493448">
                  
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140548577493448', 'post140548577493448')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577493448')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577493448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140548577493512">
              
                <ol start="66" class="pre-context" id="pre140548577493512">
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140548577493512">
                  
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140548577493512', 'post140548577493512')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577493512')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577493512">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140548578614152">
              
                <ol start="594" class="pre-context" id="pre140548578614152">
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140548578614152">
                  
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140548578614152', 'post140548578614152')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578614152')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578614152">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd4043ec978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4043ecb00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044aba90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140548578614024">
              
                <ol start="350" class="pre-context" id="pre140548578614024">
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140548578614024">
                  
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140548578614024', 'post140548578614024')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578614024')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578614024">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd4043ec978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044aba90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044ab400&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140548578613448">
              
                <ol start="1232" class="pre-context" id="pre140548578613448">
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140548578613448">
                  
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140548578613448', 'post140548578613448')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578613448')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578613448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140548577834632">
              
                <ol start="1278" class="pre-context" id="pre140548577834632">
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140548577834632">
                  
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140548577834632', 'post140548577834632')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577834632')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577834632">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140548577834504">
              
                <ol start="1227" class="pre-context" id="pre140548577834504">
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140548577834504">
                  
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140548577834504', 'post140548577834504')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577834504')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577834504">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140548577835528">
              
                <ol start="1019" class="pre-context" id="pre140548577835528">
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140548577835528">
                  
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140548577835528', 'post140548577835528')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577835528')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577835528">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140548577835656">
              
                <ol start="957" class="pre-context" id="pre140548577835656">
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140548577835656">
                  
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140548577835656', 'post140548577835656')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577835656')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577835656">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140548577836104">
              
                <ol start="159" class="pre-context" id="pre140548577836104">
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140548577836104">
                  
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140548577836104', 'post140548577836104')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577836104')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577836104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140548577495880">
              
                <ol start="143" class="pre-context" id="pre140548577495880">
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140548577495880">
                  
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140548577495880', 'post140548577495880')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577495880')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577495880">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fd4044ab128>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140548578612168">
              
                <ol start="433" class="pre-context" id="pre140548578612168">
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140548578612168">
                  
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140548578612168', 'post140548578612168')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578612168')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578612168">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd4043ec978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd4043ecf98&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4043ecb00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140548578612104">
              
                <ol start="632" class="pre-context" id="pre140548578612104">
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140548578612104">
                  
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612104', 'post140548578612104')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578612104')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578612104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd4043ec978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4043ecb00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4044aba90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140548578614728">
              
                <ol start="381" class="pre-context" id="pre140548578614728">
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140548578614728">
                  
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614728', 'post140548578614728')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578614728')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578614728">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd4043ec978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fd4041a1b88&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fd4044ab128>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140548578614088">
              
                <ol start="34" class="pre-context" id="pre140548578614088">
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140548578614088">
                  
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578614088', 'post140548578614088')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578614088')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578614088">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140548578612360">
              
                <ol start="180" class="pre-context" id="pre140548578612360">
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140548578612360">
                  
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140548578612360', 'post140548578612360')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578612360')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578612360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fd404997e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140548578255752">
              
                <ol start="178" class="pre-context" id="pre140548578255752">
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140548578255752">
                  
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140548578255752', 'post140548578255752')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578255752')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578255752">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fd404997e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140548577157256">
              
                <ol start="441" class="pre-context" id="pre140548577157256">
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140548577157256">
                  
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140548577157256', 'post140548577157256')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577157256')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577157256">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140548581871944">
              
                <ol start="520" class="pre-context" id="pre140548581871944">
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140548581871944">
                  
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140548581871944', 'post140548581871944')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548581871944')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548581871944">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140548577335176">
              
                <ol start="105" class="pre-context" id="pre140548577335176">
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140548577335176">
                  
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577335176', 'post140548577335176')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577335176')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577335176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140548578612552">
              
                <ol start="51" class="pre-context" id="pre140548578612552">
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140548578612552">
                  
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578612552', 'post140548578612552')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578612552')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578612552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd4040bf710&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140548578611336">
              
                <ol start="501" class="pre-context" id="pre140548578611336">
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140548578611336">
                  
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140548578611336', 'post140548578611336')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578611336')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578611336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd4040bf710&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140548578613512">
              
                <ol start="611" class="pre-context" id="pre140548578613512">
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140548578613512">
                  
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578613512', 'post140548578613512')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578613512')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578613512">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd4043ecf98&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd4040bf710&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515205502.0103052</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140548578613704">
              
                <ol start="501" class="pre-context" id="pre140548578613704">
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140548578613704">
                  
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140548578613704', 'post140548578613704')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578613704')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578613704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd4043ec978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd4043ecf98&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd4043ecb00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd4044ab128&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;32856&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fd40462fd80&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:30:01 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140548577640776">
              
                <ol start="134" class="pre-context" id="pre140548577640776">
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140548577640776">
                  
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140548577640776', 'post140548577640776')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577640776')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577640776">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140548577643144">
              
                <ol start="76" class="pre-context" id="pre140548577643144">
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140548577643144">
                  
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140548577643144', 'post140548577643144')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577643144')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577643144">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140548577641800">
              
                <ol start="66" class="pre-context" id="pre140548577641800">
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140548577641800">
                  
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140548577641800', 'post140548577641800')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577641800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577641800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140548582746888">
              
                <ol start="594" class="pre-context" id="pre140548582746888">
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140548582746888">
                  
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140548582746888', 'post140548582746888')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582746888')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582746888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd40417f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fcf8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fa90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140548582747208">
              
                <ol start="350" class="pre-context" id="pre140548582747208">
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140548582747208">
                  
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140548582747208', 'post140548582747208')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582747208')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582747208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd40417f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fa90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417f860&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140548582744264">
              
                <ol start="1232" class="pre-context" id="pre140548582744264">
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140548582744264">
                  
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140548582744264', 'post140548582744264')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582744264')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582744264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140548582747592">
              
                <ol start="1278" class="pre-context" id="pre140548582747592">
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140548582747592">
                  
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140548582747592', 'post140548582747592')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582747592')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582747592">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140548582747144">
              
                <ol start="1227" class="pre-context" id="pre140548582747144">
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140548582747144">
                  
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140548582747144', 'post140548582747144')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582747144')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582747144">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140548582747720">
              
                <ol start="1019" class="pre-context" id="pre140548582747720">
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140548582747720">
                  
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140548582747720', 'post140548582747720')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582747720')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582747720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140548577643912">
              
                <ol start="957" class="pre-context" id="pre140548577643912">
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140548577643912">
                  
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140548577643912', 'post140548577643912')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577643912')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577643912">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140548577643464">
              
                <ol start="159" class="pre-context" id="pre140548577643464">
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140548577643464">
                  
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140548577643464', 'post140548577643464')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577643464')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577643464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140548577640904">
              
                <ol start="143" class="pre-context" id="pre140548577640904">
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140548577640904">
                  
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140548577640904', 'post140548577640904')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577640904')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577640904">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fd40417fef0>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140548582744584">
              
                <ol start="433" class="pre-context" id="pre140548582744584">
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140548582744584">
                  
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140548582744584', 'post140548582744584')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582744584')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582744584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd40417f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd40417f908&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fcf8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140548582745224">
              
                <ol start="632" class="pre-context" id="pre140548582745224">
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140548582745224">
                  
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745224', 'post140548582745224')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582745224')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582745224">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd40417f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fcf8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fa90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140548582745416">
              
                <ol start="381" class="pre-context" id="pre140548582745416">
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140548582745416">
                  
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745416', 'post140548582745416')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582745416')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582745416">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd40417f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fd404592b08&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fd40417fef0>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140548581899528">
              
                <ol start="34" class="pre-context" id="pre140548581899528">
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140548581899528">
                  
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548581899528', 'post140548581899528')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548581899528')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548581899528">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140548581898440">
              
                <ol start="180" class="pre-context" id="pre140548581898440">
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140548581898440">
                  
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140548581898440', 'post140548581898440')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548581898440')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548581898440">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fd404997e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140548577174664">
              
                <ol start="178" class="pre-context" id="pre140548577174664">
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140548577174664">
                  
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140548577174664', 'post140548577174664')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577174664')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577174664">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fd404997e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fd4144e0550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fd4046d19d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140548581531208">
              
                <ol start="441" class="pre-context" id="pre140548581531208">
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140548581531208">
                  
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140548581531208', 'post140548581531208')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548581531208')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548581531208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140548578283912">
              
                <ol start="520" class="pre-context" id="pre140548578283912">
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140548578283912">
                  
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140548578283912', 'post140548578283912')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548578283912')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548578283912">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140548577593864">
              
                <ol start="105" class="pre-context" id="pre140548577593864">
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140548577593864">
                  
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577593864', 'post140548577593864')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577593864')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577593864">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140548577744456">
              
                <ol start="51" class="pre-context" id="pre140548577744456">
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140548577744456">
                  
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577744456', 'post140548577744456')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577744456')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577744456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd40417f0f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140548577744584">
              
                <ol start="501" class="pre-context" id="pre140548577744584">
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140548577744584">
                  
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140548577744584', 'post140548577744584')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548577744584')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548577744584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd40417f0f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140548582745096">
              
                <ol start="611" class="pre-context" id="pre140548582745096">
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140548582745096">
                  
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582745096', 'post140548582745096')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582745096')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582745096">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd40417f908&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fd40417f0f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515205801.3397658</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140548582744904">
              
                <ol start="501" class="pre-context" id="pre140548582744904">
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre></pre></li>
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140548582744904">
                  
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140548582744904', 'post140548582744904')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140548582744904')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140548582744904">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fd40417f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fd40417f908&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fd40417fcf8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fd40417fef0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;32874&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fd40462f3d8&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:35:02 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440904504968">
              
                <ol start="134" class="pre-context" id="pre140440904504968">
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140440904504968">
                  
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140440904504968', 'post140440904504968')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904504968')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904504968">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440904504904">
              
                <ol start="76" class="pre-context" id="pre140440904504904">
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140440904504904">
                  
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140440904504904', 'post140440904504904')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904504904')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904504904">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440904504584">
              
                <ol start="66" class="pre-context" id="pre140440904504584">
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140440904504584">
                  
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440904504584', 'post140440904504584')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904504584')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904504584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440904505544">
              
                <ol start="594" class="pre-context" id="pre140440904505544">
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140440904505544">
                  
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140440904505544', 'post140440904505544')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505544')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505544">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf23f2eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf23f2fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf2390898&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140440904505480">
              
                <ol start="350" class="pre-context" id="pre140440904505480">
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140440904505480">
                  
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140440904505480', 'post140440904505480')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505480')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505480">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf23f2eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf2390898&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf2390908&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140440904505416">
              
                <ol start="1232" class="pre-context" id="pre140440904505416">
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140440904505416">
                  
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140440904505416', 'post140440904505416')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505416')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505416">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140440904505352">
              
                <ol start="1278" class="pre-context" id="pre140440904505352">
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140440904505352">
                  
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140440904505352', 'post140440904505352')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505352')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505352">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140440904505288">
              
                <ol start="1227" class="pre-context" id="pre140440904505288">
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140440904505288">
                  
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140440904505288', 'post140440904505288')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505288')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505288">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140440904505224">
              
                <ol start="1019" class="pre-context" id="pre140440904505224">
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140440904505224">
                  
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440904505224', 'post140440904505224')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505224')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505224">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140440904505160">
              
                <ol start="957" class="pre-context" id="pre140440904505160">
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140440904505160">
                  
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140440904505160', 'post140440904505160')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505160')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505160">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140440904505096">
              
                <ol start="159" class="pre-context" id="pre140440904505096">
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140440904505096">
                  
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140440904505096', 'post140440904505096')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505096')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505096">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440904505032">
              
                <ol start="143" class="pre-context" id="pre140440904505032">
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140440904505032">
                  
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140440904505032', 'post140440904505032')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505032')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505032">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fbaf23908d0>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440904505800">
              
                <ol start="433" class="pre-context" id="pre140440904505800">
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140440904505800">
                  
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440904505800', 'post140440904505800')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf23f2eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf23f2d68&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf23f2fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440904505736">
              
                <ol start="632" class="pre-context" id="pre140440904505736">
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140440904505736">
                  
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505736', 'post140440904505736')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505736')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505736">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf23f2eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf23f2fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf2390898&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140440904505672">
              
                <ol start="381" class="pre-context" id="pre140440904505672">
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140440904505672">
                  
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505672', 'post140440904505672')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505672')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505672">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf23f2eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fbaf23998c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbaf23908d0>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140440904506376">
              
                <ol start="34" class="pre-context" id="pre140440904506376">
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140440904506376">
                  
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904506376', 'post140440904506376')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904506376')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904506376">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440904506312">
              
                <ol start="180" class="pre-context" id="pre140440904506312">
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140440904506312">
                  
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140440904506312', 'post140440904506312')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904506312')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904506312">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440904506248">
              
                <ol start="178" class="pre-context" id="pre140440904506248">
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140440904506248">
                  
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440904506248', 'post140440904506248')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904506248')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904506248">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140440904506184">
              
                <ol start="441" class="pre-context" id="pre140440904506184">
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140440904506184">
                  
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140440904506184', 'post140440904506184')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904506184')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904506184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140440904477832">
              
                <ol start="520" class="pre-context" id="pre140440904477832">
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140440904477832">
                  
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140440904477832', 'post140440904477832')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904477832')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904477832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140440904428104">
              
                <ol start="105" class="pre-context" id="pre140440904428104">
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140440904428104">
                  
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904428104', 'post140440904428104')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904428104')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904428104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140440904506056">
              
                <ol start="51" class="pre-context" id="pre140440904506056">
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140440904506056">
                  
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904506056', 'post140440904506056')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904506056')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904506056">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf265b780&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140440904505992">
              
                <ol start="501" class="pre-context" id="pre140440904505992">
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440904505992">
                  
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140440904505992', 'post140440904505992')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505992')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505992">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf265b780&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140440904505928">
              
                <ol start="611" class="pre-context" id="pre140440904505928">
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140440904505928">
                  
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505928', 'post140440904505928')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505928')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505928">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf23f2d68&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf265b780&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515206102.0274782</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440904505864">
              
                <ol start="501" class="pre-context" id="pre140440904505864">
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440904505864">
                  
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440904505864', 'post140440904505864')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440904505864')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440904505864">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf23f2eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf23f2d68&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf23f2fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf23908d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;55212&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fbaf3d57978&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:40:01 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440903159944">
              
                <ol start="134" class="pre-context" id="pre140440903159944">
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140440903159944">
                  
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140440903159944', 'post140440903159944')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903159944')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903159944">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440903163464">
              
                <ol start="76" class="pre-context" id="pre140440903163464">
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140440903163464">
                  
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140440903163464', 'post140440903163464')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903163464')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903163464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440903162120">
              
                <ol start="66" class="pre-context" id="pre140440903162120">
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140440903162120">
                  
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440903162120', 'post140440903162120')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162120')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162120">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440903163592">
              
                <ol start="594" class="pre-context" id="pre140440903163592">
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140440903163592">
                  
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140440903163592', 'post140440903163592')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903163592')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903163592">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf231d3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf231d550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf228bf28&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140440903162632">
              
                <ol start="350" class="pre-context" id="pre140440903162632">
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140440903162632">
                  
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140440903162632', 'post140440903162632')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162632')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162632">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf231d3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf228bf28&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf228b978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140440903162888">
              
                <ol start="1232" class="pre-context" id="pre140440903162888">
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140440903162888">
                  
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140440903162888', 'post140440903162888')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162888')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140440903163784">
              
                <ol start="1278" class="pre-context" id="pre140440903163784">
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140440903163784">
                  
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140440903163784', 'post140440903163784')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903163784')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903163784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140440903163720">
              
                <ol start="1227" class="pre-context" id="pre140440903163720">
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140440903163720">
                  
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140440903163720', 'post140440903163720')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903163720')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903163720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140440903162952">
              
                <ol start="1019" class="pre-context" id="pre140440903162952">
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140440903162952">
                  
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440903162952', 'post140440903162952')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162952')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162952">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140440903162376">
              
                <ol start="957" class="pre-context" id="pre140440903162376">
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140440903162376">
                  
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140440903162376', 'post140440903162376')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162376')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162376">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140440903162696">
              
                <ol start="159" class="pre-context" id="pre140440903162696">
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140440903162696">
                  
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140440903162696', 'post140440903162696')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162696')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440903160840">
              
                <ol start="143" class="pre-context" id="pre140440903160840">
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140440903160840">
                  
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140440903160840', 'post140440903160840')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903160840')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903160840">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440903160648">
              
                <ol start="433" class="pre-context" id="pre140440903160648">
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140440903160648">
                  
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440903160648', 'post140440903160648')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903160648')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903160648">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf231d3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf231d048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf231d550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440903162824">
              
                <ol start="632" class="pre-context" id="pre140440903162824">
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140440903162824">
                  
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162824', 'post140440903162824')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162824')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162824">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf231d3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf231d550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf228bf28&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140440903163400">
              
                <ol start="381" class="pre-context" id="pre140440903163400">
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140440903163400">
                  
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163400', 'post140440903163400')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903163400')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903163400">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf231d3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fbaf2251ec8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140440903162504">
              
                <ol start="34" class="pre-context" id="pre140440903162504">
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140440903162504">
                  
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162504', 'post140440903162504')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162504')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162504">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440903160008">
              
                <ol start="180" class="pre-context" id="pre140440903160008">
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140440903160008">
                  
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140440903160008', 'post140440903160008')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903160008')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903160008">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440902746824">
              
                <ol start="178" class="pre-context" id="pre140440902746824">
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140440902746824">
                  
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440902746824', 'post140440902746824')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902746824')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902746824">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140440902749512">
              
                <ol start="441" class="pre-context" id="pre140440902749512">
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140440902749512">
                  
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140440902749512', 'post140440902749512')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902749512')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902749512">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140440903512456">
              
                <ol start="520" class="pre-context" id="pre140440903512456">
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140440903512456">
                  
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140440903512456', 'post140440903512456')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903512456')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903512456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140440903516040">
              
                <ol start="105" class="pre-context" id="pre140440903516040">
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140440903516040">
                  
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903516040', 'post140440903516040')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903516040')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903516040">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140440903162056">
              
                <ol start="51" class="pre-context" id="pre140440903162056">
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140440903162056">
                  
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903162056', 'post140440903162056')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903162056')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903162056">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf2310940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140440903160328">
              
                <ol start="501" class="pre-context" id="pre140440903160328">
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440903160328">
                  
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140440903160328', 'post140440903160328')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903160328')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903160328">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf2310940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140440903163336">
              
                <ol start="611" class="pre-context" id="pre140440903163336">
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140440903163336">
                  
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903163336', 'post140440903163336')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903163336')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903163336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf231d048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf2310940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515206401.4074326</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440903161800">
              
                <ol start="501" class="pre-context" id="pre140440903161800">
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440903161800">
                  
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903161800', 'post140440903161800')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903161800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903161800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf231d3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf231d048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf231d550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf228bcc0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;55310&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fbaf23416f0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:45:01 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440901389832">
              
                <ol start="134" class="pre-context" id="pre140440901389832">
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140440901389832">
                  
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140440901389832', 'post140440901389832')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901389832')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901389832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440901387208">
              
                <ol start="76" class="pre-context" id="pre140440901387208">
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140440901387208">
                  
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140440901387208', 'post140440901387208')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901387208')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901387208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440901387272">
              
                <ol start="66" class="pre-context" id="pre140440901387272">
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140440901387272">
                  
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440901387272', 'post140440901387272')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901387272')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901387272">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440901637704">
              
                <ol start="594" class="pre-context" id="pre140440901637704">
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140440901637704">
                  
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140440901637704', 'post140440901637704')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901637704')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901637704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fff978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fff940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1ffff60&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140440901636872">
              
                <ol start="350" class="pre-context" id="pre140440901636872">
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140440901636872">
                  
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140440901636872', 'post140440901636872')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901636872')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901636872">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fff978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1ffff60&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fffe48&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140440901637064">
              
                <ol start="1232" class="pre-context" id="pre140440901637064">
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140440901637064">
                  
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140440901637064', 'post140440901637064')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901637064')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901637064">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140440901639688">
              
                <ol start="1278" class="pre-context" id="pre140440901639688">
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140440901639688">
                  
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140440901639688', 'post140440901639688')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901639688')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901639688">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140440901637832">
              
                <ol start="1227" class="pre-context" id="pre140440901637832">
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140440901637832">
                  
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140440901637832', 'post140440901637832')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901637832')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901637832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140440901526472">
              
                <ol start="1019" class="pre-context" id="pre140440901526472">
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140440901526472">
                  
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440901526472', 'post140440901526472')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901526472')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901526472">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140440901526280">
              
                <ol start="957" class="pre-context" id="pre140440901526280">
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140440901526280">
                  
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140440901526280', 'post140440901526280')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901526280')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901526280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140440901525576">
              
                <ol start="159" class="pre-context" id="pre140440901525576">
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140440901525576">
                  
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140440901525576', 'post140440901525576')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901525576')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901525576">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440901388680">
              
                <ol start="143" class="pre-context" id="pre140440901388680">
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140440901388680">
                  
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140440901388680', 'post140440901388680')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901388680')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901388680">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440901638280">
              
                <ol start="433" class="pre-context" id="pre140440901638280">
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140440901638280">
                  
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440901638280', 'post140440901638280')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901638280')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901638280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fff978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf1fffeb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fff940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440901638408">
              
                <ol start="632" class="pre-context" id="pre140440901638408">
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140440901638408">
                  
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638408', 'post140440901638408')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901638408')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901638408">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fff978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fff940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1ffff60&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140440901639432">
              
                <ol start="381" class="pre-context" id="pre140440901639432">
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140440901639432">
                  
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639432', 'post140440901639432')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901639432')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901639432">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fff978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fbaf20dd648&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140440901501960">
              
                <ol start="34" class="pre-context" id="pre140440901501960">
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140440901501960">
                  
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901501960', 'post140440901501960')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901501960')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901501960">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440949322056">
              
                <ol start="180" class="pre-context" id="pre140440949322056">
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140440949322056">
                  
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140440949322056', 'post140440949322056')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440949322056')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440949322056">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440901820488">
              
                <ol start="178" class="pre-context" id="pre140440901820488">
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140440901820488">
                  
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440901820488', 'post140440901820488')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901820488')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901820488">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140440901821960">
              
                <ol start="441" class="pre-context" id="pre140440901821960">
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140440901821960">
                  
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140440901821960', 'post140440901821960')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901821960')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901821960">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140440901626696">
              
                <ol start="520" class="pre-context" id="pre140440901626696">
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140440901626696">
                  
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140440901626696', 'post140440901626696')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901626696')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901626696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140440901639240">
              
                <ol start="105" class="pre-context" id="pre140440901639240">
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140440901639240">
                  
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639240', 'post140440901639240')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901639240')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901639240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140440901638792">
              
                <ol start="51" class="pre-context" id="pre140440901638792">
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140440901638792">
                  
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638792', 'post140440901638792')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901638792')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901638792">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf1fff710&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140440901638856">
              
                <ol start="501" class="pre-context" id="pre140440901638856">
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440901638856">
                  
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140440901638856', 'post140440901638856')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901638856')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901638856">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf1fff710&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140440901639560">
              
                <ol start="611" class="pre-context" id="pre140440901639560">
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140440901639560">
                  
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639560', 'post140440901639560')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901639560')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901639560">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf1fffeb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf1fff710&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515206701.1129801</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440901639752">
              
                <ol start="501" class="pre-context" id="pre140440901639752">
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440901639752">
                  
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440901639752', 'post140440901639752')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901639752')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901639752">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fff978&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf1fffeb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fff940&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1ffff98&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;55430&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fbaf23410c0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:50:01 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440902129416">
              
                <ol start="134" class="pre-context" id="pre140440902129416">
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140440902129416">
                  
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140440902129416', 'post140440902129416')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902129416')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902129416">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440902129352">
              
                <ol start="76" class="pre-context" id="pre140440902129352">
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140440902129352">
                  
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140440902129352', 'post140440902129352')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902129352')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902129352">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440902483720">
              
                <ol start="66" class="pre-context" id="pre140440902483720">
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140440902483720">
                  
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440902483720', 'post140440902483720')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902483720')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902483720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440902130504">
              
                <ol start="594" class="pre-context" id="pre140440902130504">
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140440902130504">
                  
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140440902130504', 'post140440902130504')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902130504')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902130504">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1e54b00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf22f7048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1e54ba8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140440902130440">
              
                <ol start="350" class="pre-context" id="pre140440902130440">
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140440902130440">
                  
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140440902130440', 'post140440902130440')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902130440')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902130440">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1e54b00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1e54ba8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1e54160&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140440902128712">
              
                <ol start="1232" class="pre-context" id="pre140440902128712">
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140440902128712">
                  
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140440902128712', 'post140440902128712')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902128712')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902128712">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140440902130184">
              
                <ol start="1278" class="pre-context" id="pre140440902130184">
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140440902130184">
                  
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140440902130184', 'post140440902130184')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902130184')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902130184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140440902131336">
              
                <ol start="1227" class="pre-context" id="pre140440902131336">
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140440902131336">
                  
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140440902131336', 'post140440902131336')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902131336')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902131336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140440902128328">
              
                <ol start="1019" class="pre-context" id="pre140440902128328">
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140440902128328">
                  
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440902128328', 'post140440902128328')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902128328')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902128328">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140440902129544">
              
                <ol start="957" class="pre-context" id="pre140440902129544">
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140440902129544">
                  
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140440902129544', 'post140440902129544')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902129544')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902129544">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140440902128456">
              
                <ol start="159" class="pre-context" id="pre140440902128456">
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140440902128456">
                  
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140440902128456', 'post140440902128456')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902128456')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902128456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440902128648">
              
                <ol start="143" class="pre-context" id="pre140440902128648">
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140440902128648">
                  
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140440902128648', 'post140440902128648')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902128648')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902128648">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440902129480">
              
                <ol start="433" class="pre-context" id="pre140440902129480">
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140440902129480">
                  
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440902129480', 'post140440902129480')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902129480')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902129480">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1e54b00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf22ef3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf22f7048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440902128136">
              
                <ol start="632" class="pre-context" id="pre140440902128136">
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140440902128136">
                  
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128136', 'post140440902128136')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902128136')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902128136">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1e54b00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf22f7048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1e54ba8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140440902128072">
              
                <ol start="381" class="pre-context" id="pre140440902128072">
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140440902128072">
                  
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902128072', 'post140440902128072')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902128072')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902128072">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1e54b00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fbaf2155b48&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140440903566344">
              
                <ol start="34" class="pre-context" id="pre140440903566344">
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140440903566344">
                  
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566344', 'post140440903566344')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903566344')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903566344">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440903566152">
              
                <ol start="180" class="pre-context" id="pre140440903566152">
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140440903566152">
                  
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140440903566152', 'post140440903566152')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903566152')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903566152">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440903704008">
              
                <ol start="178" class="pre-context" id="pre140440903704008">
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140440903704008">
                  
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440903704008', 'post140440903704008')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903704008')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903704008">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e48c8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140440902802824">
              
                <ol start="441" class="pre-context" id="pre140440902802824">
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140440902802824">
                  
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140440902802824', 'post140440902802824')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902802824')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902802824">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140440902463112">
              
                <ol start="520" class="pre-context" id="pre140440902463112">
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140440902463112">
                  
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140440902463112', 'post140440902463112')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902463112')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902463112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140440903451080">
              
                <ol start="105" class="pre-context" id="pre140440903451080">
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140440903451080">
                  
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903451080', 'post140440903451080')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903451080')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903451080">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140440903568264">
              
                <ol start="51" class="pre-context" id="pre140440903568264">
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140440903568264">
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903568264')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903568264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf22ef588&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140440903565640">
              
                <ol start="501" class="pre-context" id="pre140440903565640">
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440903565640">
                  
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140440903565640', 'post140440903565640')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903565640')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903565640">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf22ef588&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140440902130696">
              
                <ol start="611" class="pre-context" id="pre140440902130696">
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140440902130696">
                  
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902130696', 'post140440902130696')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902130696')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902130696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf22ef3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf22ef588&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515207001.407002</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440902131592">
              
                <ol start="501" class="pre-context" id="pre140440902131592">
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440902131592">
                  
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440902131592', 'post140440902131592')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902131592')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902131592">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1e54b00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf22ef3c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf22f7048&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1e548d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;55508&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fbaf238a3a8&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ConnectionError at /queryico/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ConnectionError at /queryico/</h1>
  <pre class="exception_value">HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://www.daoclub.org/queryico/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.11</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ConnectionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/myenv/lib/python3.6/site-packages/requests/adapters.py in send, line 508</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/myenv/bin/uwsgi</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.1</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;.&#39;,
 &#39;&#39;,
 &#39;/home/myenv/lib/python36.zip&#39;,
 &#39;/home/myenv/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/lib-dynload&#39;,
 &#39;/usr/local/python3/lib/python3.6&#39;,
 &#39;/home/myenv/lib/python3.6/site-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 6 Jan 2018 10:55:01 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440903901704">
              
                <ol start="134" class="pre-context" id="pre140440903901704">
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>            extra_kw[&#39;source_address&#39;] = self.source_address</pre></li>
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>        if self.socket_options:</pre></li>
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>            extra_kw[&#39;socket_options&#39;] = self.socket_options</pre></li>
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>            conn = connection.create_connection(</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>
                (self.host, self.port), self.timeout, **extra_kw)</pre> <span>...</span></li></ol>
              
                <ol start='142' class="post-context" id="post140440903901704">
                  
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>        except SocketTimeout as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>            raise ConnectTimeoutError(</pre></li>
                  
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                  
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre>                (self.host, self.timeout))</pre></li>
                  
                  <li onclick="toggle('pre140440903901704', 'post140440903901704')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903901704')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903901704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440903903112">
              
                <ol start="76" class="pre-context" id="pre140440903903112">
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>        except socket.error as e:</pre></li>
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>            err = e</pre></li>
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>            if sock is not None:</pre></li>
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>                sock.close()</pre></li>
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>                sock = None</pre></li>
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>    if err is not None:</pre></li>
                
                </ol>
              
              <ol start="83" class="context-line">
                <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>
        raise err</pre> <span>...</span></li></ol>
              
                <ol start='84' class="post-context" id="post140440903903112">
                  
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>    raise socket.error(&quot;getaddrinfo returns an empty list&quot;)</pre></li>
                  
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>def _set_socket_options(sock, options):</pre></li>
                  
                  <li onclick="toggle('pre140440903903112', 'post140440903903112')"><pre>    if options is None:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903903112')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903903112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py</code> in <code>create_connection</code>

          
            <div class="context" id="c140440903903560">
              
                <ol start="66" class="pre-context" id="pre140440903903560">
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            # If provided, set socket level options before connecting.</pre></li>
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            _set_socket_options(sock, socket_options)</pre></li>
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:</pre></li>
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>                sock.settimeout(timeout)</pre></li>
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            if source_address:</pre></li>
                
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>                sock.bind(source_address)</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>
            sock.connect(sa)</pre> <span>...</span></li></ol>
              
                <ol start='74' class="post-context" id="post140440903903560">
                  
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            return sock</pre></li>
                  
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>        except socket.error as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>            if sock is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440903903560', 'post140440903903560')"><pre>                sock.close()</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903903560')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903903560">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>address</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>af</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>canonname</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>ConnectionRefusedError(111, &#39;Connection refused&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>family</td>
                    <td class="code"><pre>&lt;AddressFamily.AF_INET: 2&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>host</td>
                    <td class="code"><pre>&#39;101.132.99.27&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>port</td>
                    <td class="code"><pre>8332</pre></td>
                  </tr>
                
                  <tr>
                    <td>proto</td>
                    <td class="code"><pre>6</pre></td>
                  </tr>
                
                  <tr>
                    <td>res</td>
                    <td class="code"><pre>(&lt;AddressFamily.AF_INET: 2&gt;,
 &lt;SocketKind.SOCK_STREAM: 1&gt;,
 6,
 &#39;&#39;,
 (&#39;101.132.99.27&#39;, 8332))</pre></td>
                  </tr>
                
                  <tr>
                    <td>sa</td>
                    <td class="code"><pre>(&#39;101.132.99.27&#39;, 8332)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sock</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>socket_options</td>
                    <td class="code"><pre>[(6, 1, 1)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>socktype</td>
                    <td class="code"><pre>&lt;SocketKind.SOCK_STREAM: 1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>source_address</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception ([Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440903567240">
              
                <ol start="594" class="pre-context" id="pre140440903567240">
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            if is_new_proxy_conn:</pre></li>
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>                self._prepare_proxy(conn)</pre></li>
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            # Make the request on the httplib connection object.</pre></li>
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            httplib_response = self._make_request(conn, method, url,</pre></li>
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>                                                  timeout=timeout_obj,</pre></li>
                
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>                                                  body=body, headers=headers,</pre></li>
                
                </ol>
              
              <ol start="601" class="context-line">
                <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>
                                                  chunked=chunked)</pre> <span>...</span></li></ol>
              
                <ol start='602' class="post-context" id="post140440903567240">
                  
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            # If we&#39;re going to release the connection in ``finally:``, then</pre></li>
                  
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            # the response doesn&#39;t need to know about the connection. Otherwise</pre></li>
                  
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            # it will also try to release it and we&#39;ll have a double-release</pre></li>
                  
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            # mess.</pre></li>
                  
                  <li onclick="toggle('pre140440903567240', 'post140440903567240')"><pre>            response_conn = conn if not release_conn else None</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903567240')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903567240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fc00f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc0e80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc02e8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>_make_request</code>

          
            <div class="context" id="c140440903565512">
              
                <ol start="350" class="pre-context" id="pre140440903565512">
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>            raise</pre></li>
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        # conn.request() calls httplib.*.request, not the method in</pre></li>
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        # urllib3.request. It also calls makefile (recv) on the socket.</pre></li>
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        if chunked:</pre></li>
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>            conn.request_chunked(method, url, **httplib_request_kw)</pre></li>
                
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="357" class="context-line">
                <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>
            conn.request(method, url, **httplib_request_kw)</pre> <span>...</span></li></ol>
              
                <ol start='358' class="post-context" id="post140440903565512">
                  
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        # Reset the timeout for the recv() on the socket</pre></li>
                  
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        read_timeout = timeout_obj.read_timeout</pre></li>
                  
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        # App Engine doesn&#39;t have a sock attr</pre></li>
                  
                  <li onclick="toggle('pre140440903565512', 'post140440903565512')"><pre>        if getattr(conn, &#39;sock&#39;, None):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903565512')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903565512">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>httplib_request_kw</td>
                    <td class="code"><pre>{&#39;body&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fc00f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc02e8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc0240&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>request</code>

          
            <div class="context" id="c140440903568264">
              
                <ol start="1232" class="pre-context" id="pre140440903568264">
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>            raise CannotSendHeader()</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        self._send_output(message_body, encode_chunked=encode_chunked)</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>                encode_chunked=False):</pre></li>
                
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1239" class="context-line">
                <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>
        self._send_request(method, url, body, headers, encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1240' class="post-context" id="post140440903568264">
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>    def _send_request(self, method, url, body, headers, encode_chunked):</pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        # Honor explicitly requested Host: and Accept-Encoding: headers.</pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        header_names = frozenset(k.lower() for k in headers)</pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        skips = {}</pre></li>
                  
                  <li onclick="toggle('pre140440903568264', 'post140440903568264')"><pre>        if &#39;host&#39; in header_names:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903568264')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903568264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_request</code>

          
            <div class="context" id="c140440903565896">
              
                <ol start="1278" class="pre-context" id="pre140440903565896">
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>        for hdr, value in headers.items():</pre></li>
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>            self.putheader(hdr, value)</pre></li>
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>        if isinstance(body, str):</pre></li>
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>            # RFC 2616 Section 3.7.1 says that text default has a</pre></li>
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>            # default charset of iso-8859-1.</pre></li>
                
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>            body = _encode(body, &#39;body&#39;)</pre></li>
                
                </ol>
              
              <ol start="1285" class="context-line">
                <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>
        self.endheaders(body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1286' class="post-context" id="post140440903565896">
                  
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>    def getresponse(self):</pre></li>
                  
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>        &quot;&quot;&quot;Get the response from the server.</pre></li>
                  
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>        If the HTTPConnection is in the correct state, returns an</pre></li>
                  
                  <li onclick="toggle('pre140440903565896', 'post140440903565896')"><pre>        instance of HTTPResponse or of whatever object is returned by</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903565896')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903565896">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>hdr</td>
                    <td class="code"><pre>&#39;Content-Length&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>header_names</td>
                    <td class="code"><pre>frozenset({&#39;accept&#39;,
           &#39;accept-encoding&#39;,
           &#39;connection&#39;,
           &#39;content-length&#39;,
           &#39;content-type&#39;,
           &#39;user-agent&#39;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>skips</td>
                    <td class="code"><pre>{&#39;skip_accept_encoding&#39;: 1}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#39;147&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>endheaders</code>

          
            <div class="context" id="c140440903566856">
              
                <ol start="1227" class="pre-context" id="pre140440903566856">
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        argument can be used to pass a message body associated with the</pre></li>
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        request.</pre></li>
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        if self.__state == _CS_REQ_STARTED:</pre></li>
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>            self.__state = _CS_REQ_SENT</pre></li>
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>            raise CannotSendHeader()</pre></li>
                
                </ol>
              
              <ol start="1234" class="context-line">
                <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>
        self._send_output(message_body, encode_chunked=encode_chunked)</pre> <span>...</span></li></ol>
              
                <ol start='1235' class="post-context" id="post140440903566856">
                  
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>    def request(self, method, url, body=None, headers={}, *,</pre></li>
                  
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>                encode_chunked=False):</pre></li>
                  
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        &quot;&quot;&quot;Send a complete request to the server.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre>        self._send_request(method, url, body, headers, encode_chunked)</pre></li>
                  
                  <li onclick="toggle('pre140440903566856', 'post140440903566856')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903566856')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903566856">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>_send_output</code>

          
            <div class="context" id="c140440903568904">
              
                <ol start="1019" class="pre-context" id="pre140440903568904">
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        Appends an extra \\r\\n to the buffer.</pre></li>
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        A message_body may be specified, to be appended to the request.</pre></li>
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        self._buffer.extend((b&quot;&quot;, b&quot;&quot;))</pre></li>
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        msg = b&quot;\r\n&quot;.join(self._buffer)</pre></li>
                
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        del self._buffer[:]</pre></li>
                
                </ol>
              
              <ol start="1026" class="context-line">
                <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>
        self.send(msg)</pre> <span>...</span></li></ol>
              
                <ol start='1027' class="post-context" id="post140440903568904">
                  
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>        if message_body is not None:</pre></li>
                  
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>            # create a consistent interface to message_body</pre></li>
                  
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>            if hasattr(message_body, &#39;read&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440903568904', 'post140440903568904')"><pre>                # Let file-like take precedence over byte-like.  This</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903568904')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903568904">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>encode_chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_body</td>
                    <td class="code"><pre>(b&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: [&quot;0xc1f1D4b&#39;
 b&#39;27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/local/python3/lib/python3.6/http/client.py</code> in <code>send</code>

          
            <div class="context" id="c140440903569032">
              
                <ol start="957" class="pre-context" id="pre140440903569032">
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        &quot;&quot;&quot;Send `data&#39; to the server.</pre></li>
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        ``data`` can be a string object, a bytes object, an array object, a</pre></li>
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        file-like object that supports a .read() method, or an iterable object.</pre></li>
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        if self.sock is None:</pre></li>
                
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>            if self.auto_open:</pre></li>
                
                </ol>
              
              <ol start="964" class="context-line">
                <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>
                self.connect()</pre> <span>...</span></li></ol>
              
                <ol start='965' class="post-context" id="post140440903569032">
                  
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>                raise NotConnected()</pre></li>
                  
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        if self.debuglevel &gt; 0:</pre></li>
                  
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>            print(&quot;send:&quot;, repr(data))</pre></li>
                  
                  <li onclick="toggle('pre140440903569032', 'post140440903569032')"><pre>        blocksize = 8192</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903569032')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903569032">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(b&#39;POST / HTTP/1.1\r\nHost: 101.132.99.27:8332\r\nUser-Agent: python-requests/2&#39;
 b&#39;.18.4\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep&#39;
 b&#39;-alive\r\ncontent-type: application/json\r\nContent-Length: 147\r\n\r\n&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>connect</code>

          
            <div class="context" id="c140440903568392">
              
                <ol start="159" class="pre-context" id="pre140440903568392">
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>        if getattr(self, &#39;_tunnel_host&#39;, None):</pre></li>
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>            # TODO: Fix tunnel so it doesn&#39;t depend on self.sock state.</pre></li>
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>            self._tunnel()</pre></li>
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>            # Mark this connection as not reusable</pre></li>
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>            self.auto_open = 0</pre></li>
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>    def connect(self):</pre></li>
                
                </ol>
              
              <ol start="166" class="context-line">
                <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>
        conn = self._new_conn()</pre> <span>...</span></li></ol>
              
                <ol start='167' class="post-context" id="post140440903568392">
                  
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>        self._prepare_conn(conn)</pre></li>
                  
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>    def request_chunked(self, method, url, body=None, headers=None):</pre></li>
                  
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>        Alternative to the common request method, which sends the</pre></li>
                  
                  <li onclick="toggle('pre140440903568392', 'post140440903568392')"><pre>        body with chunked encoding and not as one block</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903568392')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903568392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connection.py</code> in <code>_new_conn</code>

          
            <div class="context" id="c140440903902728">
              
                <ol start="143" class="pre-context" id="pre140440903902728">
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>        except SocketTimeout as e:</pre></li>
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>            raise ConnectTimeoutError(</pre></li>
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>                self, &quot;Connection to %s timed out. (connect timeout=%s)&quot; %</pre></li>
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>                (self.host, self.timeout))</pre></li>
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>        except SocketError as e:</pre></li>
                
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>            raise NewConnectionError(</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>
                self, &quot;Failed to establish a new connection: %s&quot; % e)</pre> <span>...</span></li></ol>
              
                <ol start='151' class="post-context" id="post140440903902728">
                  
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>        return conn</pre></li>
                  
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>    def _prepare_conn(self, conn):</pre></li>
                  
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>        self.sock = conn</pre></li>
                  
                  <li onclick="toggle('pre140440903902728', 'post140440903902728')"><pre>        # the _tunnel_host attribute was added in python 2.6.3 (via</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903902728')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903902728">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>extra_kw</td>
                    <td class="code"><pre>{&#39;socket_options&#39;: [(6, 1, 1)]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (<urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278>: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:
          
        </h3></li>
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440903565832">
              
                <ol start="433" class="pre-context" id="pre140440903565832">
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    body=request.body,</pre></li>
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    headers=request.headers,</pre></li>
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    redirect=False,</pre></li>
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    assert_same_host=False,</pre></li>
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    preload_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    decode_content=False,</pre></li>
                
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    retries=self.max_retries,</pre></li>
                
                </ol>
              
              <ol start="440" class="context-line">
                <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>
                    timeout=timeout</pre> <span>...</span></li></ol>
              
                <ol start='441' class="post-context" id="post140440903565832">
                  
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>            # Send the request.</pre></li>
                  
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                if hasattr(conn, &#39;proxy_pool&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140440903565832', 'post140440903565832')"><pre>                    conn = conn.proxy_pool</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903565832')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903565832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fc00f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf20ed0b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc0e80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py</code> in <code>urlopen</code>

          
            <div class="context" id="c140440903566984">
              
                <ol start="632" class="pre-context" id="pre140440903566984">
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>                e = SSLError(e)</pre></li>
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>            elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:</pre></li>
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>                e = ProxyError(&#39;Cannot connect to proxy.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>            elif isinstance(e, (SocketError, HTTPException)):</pre></li>
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>                e = ProtocolError(&#39;Connection aborted.&#39;, e)</pre></li>
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>            retries = retries.increment(method, url, error=e, _pool=self,</pre></li>
                
                </ol>
              
              <ol start="639" class="context-line">
                <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>
                                        _stacktrace=sys.exc_info()[2])</pre> <span>...</span></li></ol>
              
                <ol start='640' class="post-context" id="post140440903566984">
                  
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>            retries.sleep()</pre></li>
                  
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>            # Keep track of the error for the retry warning.</pre></li>
                  
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>            err = e</pre></li>
                  
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566984', 'post140440903566984')"><pre>        finally:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903566984')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903566984">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>assert_same_host</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>body_pos</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>clean_exit</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>err</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;User-Agent&#39;: &#39;python-requests/2.18.4&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Accept&#39;: &#39;*/*&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;content-type&#39;: &#39;application/json&#39;, &#39;Content-Length&#39;: &#39;147&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_new_proxy_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>pool_timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_conn</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>release_this_conn</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_kw</td>
                    <td class="code"><pre>{&#39;decode_content&#39;: False, &#39;preload_content&#39;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>retries</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fc00f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc0e80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout_obj</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc02e8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py</code> in <code>increment</code>

          
            <div class="context" id="c140440903569224">
              
                <ol start="381" class="pre-context" id="pre140440903569224">
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>        new_retry = self.new(</pre></li>
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>            total=total,</pre></li>
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>            connect=connect, read=read, redirect=redirect, status=status_count,</pre></li>
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>            history=history)</pre></li>
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>        if new_retry.is_exhausted():</pre></li>
                
                </ol>
              
              <ol start="388" class="context-line">
                <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>
            raise MaxRetryError(_pool, url, error or ResponseError(cause))</pre> <span>...</span></li></ol>
              
                <ol start='389' class="post-context" id="post140440903569224">
                  
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>        log.debug(&quot;Incremented Retry for (url=&#39;%s&#39;): %r&quot;, url, new_retry)</pre></li>
                  
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>        return new_retry</pre></li>
                  
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903569224', 'post140440903569224')"><pre>    def __repr__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903569224')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903569224">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_pool</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fc00f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>_stacktrace</td>
                    <td class="code"><pre>&lt;traceback object at 0x7fbaf22b4788&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cause</td>
                    <td class="code"><pre>&#39;unknown&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>connect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>error</td>
                    <td class="code"><pre>NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>history</td>
                    <td class="code"><pre>(RequestHistory(method=&#39;POST&#39;, url=&#39;/&#39;, error=NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,), status=None, redirect_location=None),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;POST&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>new_retry</td>
                    <td class="code"><pre>Retry(total=-1, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>read</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>redirect_location</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Retry(total=0, connect=None, read=False, redirect=None, status=None)</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>status_count</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>total</td>
                    <td class="code"><pre>-1</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            During handling of the above exception (HTTPConnectionPool(host='101.132.99.27', port=8332): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278>: Failed to establish a new connection: [Errno 111] Connection refused',))), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140440901970568">
              
                <ol start="34" class="pre-context" id="pre140440901970568">
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    @wraps(get_response, assigned=available_attrs(get_response))</pre></li>
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="41" class="context-line">
                <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>
            response = get_response(request)</pre> <span>...</span></li></ol>
              
                <ol start='42' class="post-context" id="post140440901970568">
                  
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901970568', 'post140440901970568')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901970568')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901970568">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ConnectionError(MaxRetryError(&quot;HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))&quot;,),)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440902749448">
              
                <ol start="180" class="pre-context" id="pre140440902749448">
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="187" class="context-line">
                <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>
                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='188' class="post-context" id="post140440902749448">
                  
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140440902749448', 'post140440902749448')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902749448')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902749448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140440902749768">
              
                <ol start="178" class="pre-context" id="pre140440902749768">
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="185" class="context-line">
                <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>
                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='186' class="post-context" id="post140440902749768">
                  
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140440902749768', 'post140440902749768')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902749768')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902749768">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7fbaf26a9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;sport.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=bse.views.queryico, args=(), kwargs={}, url_name=queryico, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fbb021f2550&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function queryico at 0x7fbaf23e39d8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>queryico</code>

          
            <div class="context" id="c140440902747720">
              
                <ol start="441" class="pre-context" id="pre140440902747720">
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>        request.session[&#39;user_config&#39;] = user_config</pre></li>
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>        request.session.modified = True</pre></li>
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>    return user_config</pre></li>
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>def queryico(request):</pre></li>
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>    url = &quot;http://api.etherscan.io/api&quot;</pre></li>
                
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>    params = &quot;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&quot;</pre></li>
                
                </ol>
              
              <ol start="448" class="context-line">
                <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>
    if unlockAccount() == False:</pre> <span>...</span></li></ol>
              
                <ol start='449' class="post-context" id="post140440902747720">
                  
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>        return JsonResponse(&quot;unlockAccount False&quot;, safe=False)</pre></li>
                  
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>    response = requests.get(url,params).json()</pre></li>
                  
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>    for item in response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>        if item[&#39;isError&#39;] == &quot;1&quot;:</pre></li>
                  
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre140440902747720', 'post140440902747720')"><pre>        try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902747720')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902747720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>&#39;module=account&amp;action=txlist&amp;address=0x530a31FdC2e54852597783aD1328e13f8f35C225&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey=EGTSEJ228H579APFKR98ZBPS2CFSNTMBIW&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/queryico/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://api.etherscan.io/api&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>./bse/views.py</code> in <code>unlockAccount</code>

          
            <div class="context" id="c140440902748680">
              
                <ol start="520" class="pre-context" id="pre140440902748680">
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>    headers = {&#39;content-type&#39;: &#39;application/json&#39;}</pre></li>
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>    unlockAccount = {</pre></li>
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>        &quot;jsonrpc&quot;: &quot;2.0&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>        &quot;method&quot;: &quot;personal_unlockAccount&quot;,</pre></li>
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>        &quot;params&quot;: [&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300],</pre></li>
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>        &quot;id&quot;: 86}</pre></li>
                
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>    response = requests.post(</pre></li>
                
                </ol>
              
              <ol start="527" class="context-line">
                <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>
        url, data=json.dumps(unlockAccount), headers=headers).json()</pre> <span>...</span></li></ol>
              
                <ol start='528' class="post-context" id="post140440902748680">
                  
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>    try:</pre></li>
                  
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>        if response[&#39;result&#39;]:</pre></li>
                  
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>            return True</pre></li>
                  
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>    except:</pre></li>
                  
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre140440902748680', 'post140440902748680')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440902748680')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440902748680">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>unlockAccount</td>
                    <td class="code"><pre>{&#39;id&#39;: 86,
 &#39;jsonrpc&#39;: &#39;2.0&#39;,
 &#39;method&#39;: &#39;personal_unlockAccount&#39;,
 &#39;params&#39;: [&#39;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&#39;,
            &#39;okfuckyoujzb2015&#39;,
            300]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>post</code>

          
            <div class="context" id="c140440901360712">
              
                <ol start="105" class="pre-context" id="pre140440901360712">
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    :param data: (optional) Dictionary (will be form-encoded), bytes, or file-like object to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    :param json: (optional) json data to send in the body of the :class:`Request`.</pre></li>
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    :param \*\*kwargs: Optional arguments that ``request`` takes.</pre></li>
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    :return: :class:`Response &lt;Response&gt;` object</pre></li>
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    :rtype: requests.Response</pre></li>
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>
    return request(&#39;post&#39;, url, data=data, json=json, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='113' class="post-context" id="post140440901360712">
                  
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>def put(url, data=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    r&quot;&quot;&quot;Sends a PUT request.</pre></li>
                  
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901360712', 'post140440901360712')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901360712')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901360712">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;}}</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/api.py</code> in <code>request</code>

          
            <div class="context" id="c140440901360264">
              
                <ol start="51" class="pre-context" id="pre140440901360264">
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>      &lt;Response [200]&gt;</pre></li>
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    # By using the &#39;with&#39; statement we are sure the session is closed, thus we</pre></li>
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    # avoid leaving sockets open which can trigger a ResourceWarning in some</pre></li>
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    # cases, and look like a memory leak in others.</pre></li>
                
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    with sessions.Session() as session:</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>
        return session.request(method=method, url=url, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post140440901360264">
                  
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>def get(url, params=None, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    r&quot;&quot;&quot;Sends a GET request.</pre></li>
                  
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440901360264', 'post140440901360264')"><pre>    :param url: URL for the new :class:`Request` object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440901360264')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440901360264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;data&#39;: &#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
         &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, &#39;
         &#39;300], &quot;id&quot;: 86}&#39;,
 &#39;headers&#39;: {&#39;content-type&#39;: &#39;application/json&#39;},
 &#39;json&#39;: None}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>session</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf2023eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>request</code>

          
            <div class="context" id="c140440903568008">
              
                <ol start="501" class="pre-context" id="pre140440903568008">
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>        # Send the request.</pre></li>
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>        send_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>            &#39;timeout&#39;: timeout,</pre></li>
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>            &#39;allow_redirects&#39;: allow_redirects,</pre></li>
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>        send_kwargs.update(settings)</pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>
        resp = self.send(prep, **send_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440903568008">
                  
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>        return resp</pre></li>
                  
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>    def get(self, url, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre>        r&quot;&quot;&quot;Sends a GET request. Returns :class:`Response` object.</pre></li>
                  
                  <li onclick="toggle('pre140440903568008', 'post140440903568008')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903568008')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903568008">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>auth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>cookies</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>(&#39;{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;personal_unlockAccount&quot;, &quot;params&quot;: &#39;
 &#39;[&quot;0xc1f1D4b27623EA722b1B3C10F509aa6C9c05E81C&quot;, &quot;okfuckyoujzb2015&quot;, 300], &#39;
 &#39;&quot;id&quot;: 86}&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>files</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>headers</td>
                    <td class="code"><pre>{&#39;content-type&#39;: &#39;application/json&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>json</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#39;post&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>prep</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>req</td>
                    <td class="code"><pre>&lt;Request [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf2023eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>send_kwargs</td>
                    <td class="code"><pre>{&#39;allow_redirects&#39;: True,
 &#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><pre>{&#39;cert&#39;: None, &#39;proxies&#39;: OrderedDict(), &#39;stream&#39;: False, &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;http://101.132.99.27:8332&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/sessions.py</code> in <code>send</code>

          
            <div class="context" id="c140440903567496">
              
                <ol start="611" class="pre-context" id="pre140440903567496">
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        # Get the appropriate adapter to use</pre></li>
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        adapter = self.get_adapter(url=request.url)</pre></li>
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        # Start time (approximately) of the request</pre></li>
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        start = preferred_clock()</pre></li>
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        # Send the request</pre></li>
                
                </ol>
              
              <ol start="618" class="context-line">
                <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>
        r = adapter.send(request, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='619' class="post-context" id="post140440903567496">
                  
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        # Total elapsed time of the request (approximately)</pre></li>
                  
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        elapsed = preferred_clock() - start</pre></li>
                  
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        r.elapsed = timedelta(seconds=elapsed)</pre></li>
                  
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903567496', 'post140440903567496')"><pre>        # Response manipulation hooks</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903567496')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903567496">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>adapter</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf20ed0b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_redirects</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>hooks</td>
                    <td class="code"><pre>{&#39;response&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;cert&#39;: None,
 &#39;proxies&#39;: OrderedDict(),
 &#39;stream&#39;: False,
 &#39;timeout&#39;: None,
 &#39;verify&#39;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.sessions.Session object at 0x7fbaf2023eb8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1515207301.0793848</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/myenv/lib/python3.6/site-packages/requests/adapters.py</code> in <code>send</code>

          
            <div class="context" id="c140440903566664">
              
                <ol start="501" class="pre-context" id="pre140440903566664">
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>            if isinstance(e.reason, _ProxyError):</pre></li>
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>                raise ProxyError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre></pre></li>
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>            if isinstance(e.reason, _SSLError):</pre></li>
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>                # This branch is for urllib3 v1.22 and later.</pre></li>
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>                raise SSLError(e, request=request)</pre></li>
                
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre></pre></li>
                
                </ol>
              
              <ol start="508" class="context-line">
                <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>
            raise ConnectionError(e, request=request)</pre> <span>...</span></li></ol>
              
                <ol start='509' class="post-context" id="post140440903566664">
                  
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>        except ClosedPoolError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>            raise ConnectionError(e, request=request)</pre></li>
                  
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>        except _ProxyError as e:</pre></li>
                  
                  <li onclick="toggle('pre140440903566664', 'post140440903566664')"><pre>            raise ProxyError(e)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140440903566664')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140440903566664">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cert</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>conn</td>
                    <td class="code"><pre>&lt;urllib3.connectionpool.HTTPConnectionPool object at 0x7fbaf1fc00f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>proxies</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;PreparedRequest [POST]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;requests.adapters.HTTPAdapter object at 0x7fbaf20ed0b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stream</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>timeout</td>
                    <td class="code"><pre>&lt;urllib3.util.timeout.Timeout object at 0x7fbaf1fc0e80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>verify</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ConnectionError at /queryico/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://www.daoclub.org/queryico/

Django Version: 1.11
Python Version: 3.6.1
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  141.                 (self.host, self.port), self.timeout, **extra_kw)

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  83.         raise err

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/connection.py" in create_connection
  73.             sock.connect(sa)

During handling of the above exception ([Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  601.                                                   chunked=chunked)

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in _make_request
  357.             conn.request(method, url, **httplib_request_kw)

File "/usr/local/python3/lib/python3.6/http/client.py" in request
  1239.         self._send_request(method, url, body, headers, encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_request
  1285.         self.endheaders(body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in endheaders
  1234.         self._send_output(message_body, encode_chunked=encode_chunked)

File "/usr/local/python3/lib/python3.6/http/client.py" in _send_output
  1026.         self.send(msg)

File "/usr/local/python3/lib/python3.6/http/client.py" in send
  964.                 self.connect()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in connect
  166.         conn = self._new_conn()

File "/home/myenv/lib/python3.6/site-packages/urllib3/connection.py" in _new_conn
  150.                 self, &quot;Failed to establish a new connection: %s&quot; % e)

During handling of the above exception (&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  440.                     timeout=timeout

File "/home/myenv/lib/python3.6/site-packages/urllib3/connectionpool.py" in urlopen
  639.                                         _stacktrace=sys.exc_info()[2])

File "/home/myenv/lib/python3.6/site-packages/urllib3/util/retry.py" in increment
  388.             raise MaxRetryError(_pool, url, error or ResponseError(cause))

During handling of the above exception (HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))), another exception occurred:

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/myenv/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "./bse/views.py" in queryico
  448.     if unlockAccount() == False:

File "./bse/views.py" in unlockAccount
  527.         url, data=json.dumps(unlockAccount), headers=headers).json()

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in post
  112.     return request(&#39;post&#39;, url, data=data, json=json, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/api.py" in request
  58.         return session.request(method=method, url=url, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in request
  508.         resp = self.send(prep, **send_kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/sessions.py" in send
  618.         r = adapter.send(request, **kwargs)

File "/home/myenv/lib/python3.6/site-packages/requests/adapters.py" in send
  508.             raise ConnectionError(e, request=request)

Exception Type: ConnectionError at /queryico/
Exception Value: HTTPConnectionPool(host=&#39;101.132.99.27&#39;, port=8332): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7fbaf1fc0278&gt;: Failed to establish a new connection: [Errno 111] Connection refused&#39;,))
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><pre>&#39;/usr/share/nginx/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;curl/7.29.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;47.89.245.115&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;55538&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_SCHEME</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><pre>&#39;/queryico/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;80&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.node</td>
          <td class="code"><pre>b&#39;izrj94z5cm1cfn7pv2u6liz&#39;</pre></td>
        </tr>
      
        <tr>
          <td>uwsgi.version</td>
          <td class="code"><pre>b&#39;2.0.15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=2 mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;uwsgi._Input object at 0x7fbaf23417f8&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>sport.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;bse.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/sport&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;sport&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DOMAIN</td>
          <td class="code"><pre>&#39;http://www.daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;smtp.exmail.qq.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;noreply@daoclub.org&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>465</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;bse&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/home/sport/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;sport.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;sport.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.i18n&#39;,
                                     &#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;sport.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
