# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-21 13:49
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('checkEmail', models.BooleanField(default=False, verbose_name='邮箱验证')),
                ('pcode', models.CharField(blank=True, max_length=10)),
                ('icode', models.CharField(max_length=10)),
                ('eth_address', models.CharField(max_length=50)),
                ('dcb_count', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('is_kyc', models.BooleanField(default=False, verbose_name='kyc验证')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50)),
                ('dcb_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('hash', models.CharField(max_length=100, unique=True)),
                ('status', models.BooleanField(default=False, verbose_name='是否发送')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_price', models.IntegerField(default=0)),
                ('public_price', models.IntegerField(default=0)),
                ('private_token_count', models.IntegerField(default=0)),
                ('public_token_count', models.IntegerField(default=0)),
                ('private_received_token', models.IntegerField(default=0)),
                ('public_received_token', models.IntegerField(default=0)),
                ('eth_price', models.IntegerField(default=0)),
                ('private_date_start', models.DateTimeField(default=0)),
                ('private_date_end', models.DateTimeField(default=0)),
                ('public_date_start', models.DateTimeField(default=0)),
                ('public_date_end', models.DateTimeField(default=0)),
                ('private_is_over', models.BooleanField(default=False, verbose_name='私募是否结束')),
                ('public_is_over', models.BooleanField(default=False, verbose_name='公开是否结束')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=50)),
                ('message', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=False, verbose_name='是否处理')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('en_name', models.CharField(max_length=20)),
                ('code', models.CharField(max_length=5)),
                ('code2', models.CharField(max_length=5)),
                ('code3', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Kyc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.IntegerField()),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('id_type', models.IntegerField(verbose_name='ID类型')),
                ('id_number', models.CharField(max_length=30)),
                ('photo1', models.ImageField(blank=True, upload_to='img')),
                ('photo2', models.ImageField(blank=True, upload_to='img')),
                ('photo3', models.ImageField(blank=True, upload_to='img')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=False, verbose_name='是否众筹了')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eth_num', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('dcb_num', models.IntegerField(default=0)),
                ('hash', models.CharField(max_length=100, unique=True)),
                ('status', models.BooleanField(default=False, verbose_name='是否发送')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
